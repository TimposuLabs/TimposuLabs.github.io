"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[1165],{52054:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>l});var s=a(19809),i=a(74848),r=a(28453);const t={slug:"postgres-docker-wsl",title:"Menjalankan PostgreSQL di Docker Container pada Windows Subsystem for Linux (WSL)",authors:"topekox",tags:["docker","postgres","wsl"]},d=void 0,o={authorsImageUrls:[void 0]},l=[{value:"\u2705 Install WSL 2 pada Windows 11",id:"-install-wsl-2-pada-windows-11",level:2},{value:"\u2705 Install Docker pada WSL 2",id:"-install-docker-pada-wsl-2",level:2},{value:"\u2705 Jalankan Container Postgresql",id:"-jalankan-container-postgresql",level:2},{value:"\u2705 Menghubungkan Database Postgres ke Windows",id:"-menghubungkan-database-postgres-ke-windows",level:2},{value:"\u2705 Cek koneksi",id:"-cek-koneksi",level:2},{value:"\ud83c\udf10 Referensi",id:"-referensi",level:2}];function c(n){const e={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.p,{children:["Jadi saya biasanya menggunakan Docker pada sistem operasi Linux (Ubuntu, Fedora) menggunakan Docker Engine saja tanpa Docker Desktop, karena menurut saya lebih mudah digunakan. Docker Engine mudah digunakan di Linux karena dirancang untuk memanfaatkan fitur-fitur kernel Linux, seperti ",(0,i.jsx)(e.em,{children:"namespaces"})," dan ",(0,i.jsx)(e.em,{children:"cgroups"}),", yang mendukung isolasi dan efisiensi kontainer."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"HeidiSQL",src:a(9894).A+"",width:"1472",height:"832"})}),"\n",(0,i.jsx)(e.p,{children:"Docker Engine sering lebih dipilih dibandingkan Docker Desktop karena beberapa alasan berikut:"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Ringan dan Efisien"}),": Docker Engine tidak memerlukan antarmuka grafis atau mesin virtual, sehingga lebih ringan dan efisien, terutama di sistem operasi berbasis Linux."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Gratis untuk Penggunaan Komersial"}),": Docker Engine tidak memiliki batasan lisensi seperti Docker Desktop, yang memerlukan langganan berbayar untuk penggunaan komersial di perusahaan besar."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Kontrol Lebih Besar"}),": Dengan Docker Engine, pengguna memiliki kontrol penuh atas konfigurasi dan pengelolaan kontainer tanpa tambahan fitur yang mungkin tidak diperlukan."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Kompatibilitas Linux"}),": Docker Engine dirancang untuk berjalan langsung di Linux, sehingga tidak memerlukan layer tambahan seperti mesin virtual yang digunakan Docker Desktop di Windows atau macOS."]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Jadi itulah beberapa alasan saya lebih memilih Docker Engine dibanding Docker Desktop. Tapi ketika menggunakan sistem operasi Windows 11, tidak terdapat akses langsung menggunakan Docker Engine. Solusi yang dapat digunakan untuk menggunakan Docker Engine di Windows 11 adalah menginstallnya pada Windows Subsystem for Linux (WSL) atau menginstallnya pada software virtual mesin seperti Virtual Box, VMWare atau Qemu."}),"\n",(0,i.jsx)(e.p,{children:"Pada artikel ini saya akan menggunakan WSL karena lebih cepat dalam pengoperasiannya dibanding menggunakan software virtual mesin."}),"\n",(0,i.jsx)(e.h2,{id:"-install-wsl-2-pada-windows-11",children:"\u2705 Install WSL 2 pada Windows 11"}),"\n",(0,i.jsx)(e.p,{children:"Pada tutorial ini kami berasumsi bahwa teman-teman sudah melakukan instalasi WSL 2 dan sudah menginstall Ubuntu pada mesin WSL."}),"\n",(0,i.jsxs)(e.admonition,{type:"info",children:[(0,i.jsx)(e.p,{children:"Untuk instalasi WSL 2 pada Windows 11 dapat melihat dokumentasi lengkapnya di sini:"}),(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://learn.microsoft.com/en-us/windows/wsl/install",children:"https://learn.microsoft.com/en-us/windows/wsl/install"})})]}),"\n",(0,i.jsx)(e.h2,{id:"-install-docker-pada-wsl-2",children:"\u2705 Install Docker pada WSL 2"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:"Buka Ubuntu pada bash WSL 2."}),"\n",(0,i.jsx)(e.li,{children:"Update Linux Repository"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"sudo apt-get update\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"3",children:["\n",(0,i.jsx)(e.li,{children:"Download dependency dan menambahkan Docker GPG Key"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"sudo apt-get install ca-certificates curl\r\nsudo install -m 0755 -d /etc/apt/keyrings\r\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\r\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"4",children:["\n",(0,i.jsx)(e.li,{children:"Menambahkan repository Docker"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'echo \\\r\n  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\r\n  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \\\r\n  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n'})}),"\n",(0,i.jsxs)(e.ol,{start:"5",children:["\n",(0,i.jsx)(e.li,{children:"Update"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"sudo apt-get update\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"6",children:["\n",(0,i.jsx)(e.li,{children:"Install Docker"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"7",children:["\n",(0,i.jsx)(e.li,{children:"Cek Instalasi"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"ucup@Timposu:~$ docker --version\r\nDocker version 28.0.4, build b8034c0\n"})}),"\n",(0,i.jsx)(e.h2,{id:"-jalankan-container-postgresql",children:"\u2705 Jalankan Container Postgresql"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["Agar datanya tetap ada, maka kita perlu membuat volume, di sini saya akan membuat volume dengann nama ",(0,i.jsx)(e.code,{children:"postgres-volume"}),":"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"docker volume create postgres-volume\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"2",children:["\n",(0,i.jsxs)(e.li,{children:["Membuat container Postgresql dengan nama ",(0,i.jsx)(e.code,{children:"postgresqldatabase"})," dan password ",(0,i.jsx)(e.code,{children:"secretpassword"}),":"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"docker container run -d --rm --name postgresqldatabase -e POSTGRES_PASSWORD=secretpassword -p 5432:5432 -v postgres-volume:/var/lib/postgresql\r\n/data postgres\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"3",children:["\n",(0,i.jsx)(e.li,{children:"Cek container:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'ucup@Timposu:~$ docker container ps\r\nCONTAINER ID   IMAGE           COMMAND                  CREATED         STATUS         PORTS                                         NAMES\r\n59c7cb0f2a7f   postgres:17.4   "docker-entrypoint.s\u2026"   2 seconds ago   Up 2 seconds   0.0.0.0:5432->5432/tcp, [::]:5432->5432/tcp   postgresqldatabase\n'})}),"\n",(0,i.jsx)(e.h2,{id:"-menghubungkan-database-postgres-ke-windows",children:"\u2705 Menghubungkan Database Postgres ke Windows"}),"\n",(0,i.jsx)(e.p,{children:"Untuk menghubungkan aplikasi kita dengan PostgreSQL yang ada pada container Docker di WSL2, kita bisa menggunakan aplikasi client lain seperti HeidiSQL, DBEaver atau PGAdmin."}),"\n",(0,i.jsx)(e.admonition,{type:"info",children:(0,i.jsx)(e.p,{children:"Docker pada WSL berjalan ketika bash Ubuntu sedang aktif, pastikan bash Ubuntu pada WSL terbuka."})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Buka Powershell di Windows"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Cek IP Address WSL 2 dengan perintah"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"wsl hostname -I\n"})}),"\n",(0,i.jsx)(e.p,{children:"Kita akan mendapatkan 2 IP Address:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"PS C:\\Users\\ucup> wsl hostname -I\r\n172.30.163.213 172.17.0.1\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Dimana IP Address pertama yaitu ",(0,i.jsx)(e.code,{children:"172.30.163.213"})," adalah IP Address dari WSL 2 (hasil IP Address mungkin berbeda dimasing-masing komputer)."]}),"\n",(0,i.jsxs)(e.ol,{start:"3",children:["\n",(0,i.jsx)(e.li,{children:"Sekarang kita akan melakukan koneksi TCP pada Port 5432 dimana port tersebut yang digunakan oleh Postgresql yang ada dalam DOcker container pada WSL 2."}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"Test-NetConnection -ComputerName 172.30.163.213 -Port 5432\n"})}),"\n",(0,i.jsx)(e.p,{children:"Ganti IP Address di atas dengan IP Address teman-teman"}),"\n",(0,i.jsx)(e.p,{children:"Tunggu beberapa saat, jika berhasil maka hasil akan terlihat seperti di bawah ini:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"PS C:\\Users\\ucup> Test-NetConnection -ComputerName 172.30.163.213 -Port 5432                                           \r\n\r\nComputerName     : 172.30.163.213\r\nRemoteAddress    : 172.30.163.213\r\nRemotePort       : 5432\r\nInterfaceAlias   : vEthernet (WSL (Hyper-V firewall))\r\nSourceAddress    : 172.30.160.1\r\nTcpTestSucceeded : True\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Jika nilai dari ",(0,i.jsx)(e.code,{children:"TcpTestSucceeded"})," adalah ",(0,i.jsx)(e.code,{children:"True"})," maka koneksi berhasil. ",(0,i.jsxs)(e.strong,{children:["Jika nilai ",(0,i.jsx)(e.code,{children:"TcpTestSucceeded"})," adalah ",(0,i.jsx)(e.code,{children:"False"})]})," maka silahkan cek koneksi atau container apakah sudah sesuai port, konfigurasinya seperti di atas."]}),"\n",(0,i.jsx)(e.h2,{id:"-cek-koneksi",children:"\u2705 Cek koneksi"}),"\n",(0,i.jsx)(e.p,{children:"Sekarang kita dapat melakukan uji coba menggunakan PostgreSQL Client seperti HeidiSQL, DBEaver atau PGAdmin."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"HeidiSQL",src:a(47243).A+"",width:"859",height:"604"})}),"\n",(0,i.jsx)(e.h2,{id:"-referensi",children:"\ud83c\udf10 Referensi"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://medium.com/@jkarelins/run-postgresql-database-in-docker-container-on-wsl2-656ed3c02280",children:"https://medium.com/@jkarelins/run-postgresql-database-in-docker-container-on-wsl2-656ed3c02280"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://learn.microsoft.com/en-us/windows/wsl/install",children:"https://learn.microsoft.com/en-us/windows/wsl/install"})}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},47243:(n,e,a)=>{a.d(e,{A:()=>s});const s=a.p+"assets/images/heidi-f201fd20a58f8db9129aa5c97a482abc.png"},9894:(n,e,a)=>{a.d(e,{A:()=>s});const s=a.p+"assets/images/logo-wsl-9944d4489afded196cca5abdfeecdb5a.jpg"},28453:(n,e,a)=>{a.d(e,{R:()=>t,x:()=>d});var s=a(96540);const i={},r=s.createContext(i);function t(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:t(n.components),s.createElement(r.Provider,{value:e},n.children)}},19809:n=>{n.exports=JSON.parse('{"permalink":"/blog/postgres-docker-wsl","source":"@site/blog/2025-04-10-postgres-docker-wsl.md","title":"Menjalankan PostgreSQL di Docker Container pada Windows Subsystem for Linux (WSL)","description":"Jadi saya biasanya menggunakan Docker pada sistem operasi Linux (Ubuntu, Fedora) menggunakan Docker Engine saja tanpa Docker Desktop, karena menurut saya lebih mudah digunakan. Docker Engine mudah digunakan di Linux karena dirancang untuk memanfaatkan fitur-fitur kernel Linux, seperti namespaces dan cgroups, yang mendukung isolasi dan efisiensi kontainer.","date":"2025-04-10T00:00:00.000Z","tags":[{"inline":true,"label":"docker","permalink":"/blog/tags/docker"},{"inline":true,"label":"postgres","permalink":"/blog/tags/postgres"},{"inline":true,"label":"wsl","permalink":"/blog/tags/wsl"}],"readingTime":3.57,"hasTruncateMarker":true,"authors":[{"name":"Ucup TopekoX","title":"TimposuLabs creator","imageURL":"https://topekox.github.io/assets/images/avatar.jpeg","key":"topekox","page":null}],"frontMatter":{"slug":"postgres-docker-wsl","title":"Menjalankan PostgreSQL di Docker Container pada Windows Subsystem for Linux (WSL)","authors":"topekox","tags":["docker","postgres","wsl"]},"unlisted":false,"prevItem":{"title":"Cara membuat Pagination REST API di Spring Boot","permalink":"/blog/spring-boot-rest-api-pagination"},"nextItem":{"title":"Spring Boot CRUD REST API Java Record DTO + Mapper dengan Mapstruct","permalink":"/blog/spring-boot-crud-rest-dto-mapstruct"}}')}}]);