"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[6547],{11299:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"java-unit-test/looping-test","title":"Looping Test","description":"JUnit mendukung eksekusi unit test berulang kali sesuai dengan jumlah yang kita tentukan. Untuk mengulang eksekusi unit test, kita bisa menggunakan annotation @RepeatedTest di method unit test nya. @RepeatedTest juga bisa digunakan untuk mengubah detail nama test nya, dan kita bisa menggunakan value  untuk mendapatkan display name, {currentRepetition} untuk mendapatkan perulangan ke berapa saat ini,  dan {totalRepetitions} untuk mendapatkan total perulangan nya.","source":"@site/tutorial/java/java-unit-test/17-looping-test.md","sourceDirName":"java-unit-test","slug":"/java-unit-test/looping-test","permalink":"/java/java-unit-test/looping-test","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":17,"frontMatter":{"sidebar_position":17,"title":"Looping Test"},"sidebar":"tutorialSidebar","previous":{"title":"Pewarisan di JUnit Test","permalink":"/java/java-unit-test/pewarisan-test"},"next":{"title":"Parameter Test","permalink":"/java/java-unit-test/parameter-test"}}');var i=n(74848),s=n(28453);const r={sidebar_position:17,title:"Looping Test"},o=void 0,u={},l=[{value:"Informasi Perulangan",id:"informasi-perulangan",level:2}];function d(t){const e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.p,{children:["JUnit mendukung eksekusi unit test berulang kali sesuai dengan jumlah yang kita tentukan. Untuk mengulang eksekusi unit test, kita bisa menggunakan annotation ",(0,i.jsx)(e.code,{children:"@RepeatedTest"})," di method unit test nya. ",(0,i.jsx)(e.code,{children:"@RepeatedTest"})," juga bisa digunakan untuk mengubah detail nama test nya, dan kita bisa menggunakan value ",(0,i.jsx)(e.code,{children:"{displayName}"})," untuk mendapatkan display name, ",(0,i.jsx)(e.code,{children:"{currentRepetition}"})," untuk mendapatkan perulangan ke berapa saat ini,  dan ",(0,i.jsx)(e.code,{children:"{totalRepetitions}"})," untuk mendapatkan total perulangan nya."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// REPEAT TEST sebanyak 20 kali\r\n@DisplayName("Test Calculator Repeat")\r\n@RepeatedTest(\r\n\t\t\tvalue = 20,\r\n\t\t\tname = "{displayName} ke {currentRepetition} dari {totalRepetitions}"\r\n\t\t)\r\nvoid testRepeatRandom(Random random) {\r\n\tint a = random.nextInt();\r\n\tint b = random.nextInt();\r\n\t\r\n\tvar result = calculator.add(a, b);\r\n\tvar expect = a + b;\r\n\t\r\n\tAssertions.assertEquals(expect, result);\r\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"informasi-perulangan",children:"Informasi Perulangan"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"@RepeatedTest"})," juga memiliki object ",(0,i.jsx)(e.code,{children:"RepetitionInfo"})," yang di inject oleh class ",(0,i.jsx)(e.code,{children:"RepetitionInfoParameterResolver"}),", sehingga kita bisa mendapatkan informasi RepetitionInfo melalui parameter function unit test."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@DisplayName("Test Calculator Repeat with info")\r\n@RepeatedTest(\r\n\t\tvalue = 20,\r\n\t\tname = "{displayName}"\r\n\t\t)\r\nvoid testRepeatInfoRandom(TestInfo testInfo, Random random, RepetitionInfo repetitionInfo) {\r\n\tSystem.out.println(\r\n\t\t\ttestInfo.getDisplayName() + " ke " + \r\n\t\t\t\t\trepetitionInfo.getCurrentRepetition() + " dari " + \r\n\t\t\t\t\t\trepetitionInfo.getTotalRepetitions());\r\n\tint a = random.nextInt();\r\n\tint b = random.nextInt();\r\n\t\r\n\tvar result = calculator.add(a, b);\r\n\tvar expect = a + b;\r\n\t\r\n\tAssertions.assertEquals(expect, result);\r\n}\n'})})]})}function p(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(d,{...t})}):d(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>o});var a=n(96540);const i={},s=a.createContext(i);function r(t){const e=a.useContext(s);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:r(t.components),a.createElement(s.Provider,{value:e},t.children)}}}]);