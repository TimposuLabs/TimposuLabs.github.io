"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[8319],{6919:(a,n,e)=>{e.r(n),e.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"kotlin-dasar/variable","title":"Variable","description":"Apa itu Variable?","source":"@site/tutorial/kotlin/kotlin-dasar/07-variable.md","sourceDirName":"kotlin-dasar","slug":"/kotlin-dasar/variable","permalink":"/kotlin/kotlin-dasar/variable","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"Variable"},"sidebar":"tutorialSidebar","previous":{"title":"Type Data String","permalink":"/kotlin/kotlin-dasar/string"},"next":{"title":"Array","permalink":"/kotlin/kotlin-dasar/array"}}');var l=e(74848),t=e(28453);const r={sidebar_position:7,title:"Variable"},s=void 0,d={},o=[{value:"Apa itu Variable?",id:"apa-itu-variable",level:2},{value:"Deklarasi Variable",id:"deklarasi-variable",level:2},{value:"Contoh Mutable",id:"contoh-mutable",level:3},{value:"Contoh Immutable",id:"contoh-immutable",level:3},{value:"Nullable",id:"nullable",level:2},{value:"Variable Constant",id:"variable-constant",level:2}];function u(a){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...a.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"apa-itu-variable",children:"Apa itu Variable?"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Variable adalah tempat untuk menyimpan data."}),"\n",(0,l.jsx)(n.li,{children:"Kotlin mendukung 2 jenis variabel; Mutable (bisa diubah) dan Immutable (tidak bisa diubah)."}),"\n",(0,l.jsxs)(n.li,{children:["Untuk membuat variable Mutable, di kotlin bisa menggunakan kata kunci ",(0,l.jsx)(n.code,{children:"var"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Untuk membuat variable Immutable, di kotlin bisa menggunakan kata kunci ",(0,l.jsx)(n.code,{children:"val"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsx)(n.p,{children:"Direkomendasikan menggunakan Immutable dibanding Mutable data"})}),"\n",(0,l.jsx)(n.h2,{id:"deklarasi-variable",children:"Deklarasi Variable"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-kotlin",children:"val/var namaVariable : TipeData = data\n"})}),"\n",(0,l.jsx)(n.h3,{id:"contoh-mutable",children:"Contoh Mutable"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-kotlin",children:'var name: String = "Ucup"\r\n\r\n// mengubah data name\r\nname = "Angga"\n'})}),"\n",(0,l.jsx)(n.h3,{id:"contoh-immutable",children:"Contoh Immutable"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-kotlin",children:'val firstName: String = "Ucup"\r\nval lastName = "Brian" // dapat langsung memasukan nilai tanpa mendeklarasikan type data\r\n\r\n// error\r\nlastName = "Angga"\n'})}),"\n",(0,l.jsx)(n.h2,{id:"nullable",children:"Nullable"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Secara standar, variable di Kotlin harus dideklarasikan / diinisialisasikan nilai nya."}),"\n",(0,l.jsx)(n.li,{children:"Jika saat membuat variable, tidak diberi nilai, maka akan error."}),"\n",(0,l.jsxs)(n.li,{children:["Kotlin mendukung variable yang boleh ",(0,l.jsx)(n.code,{children:"null"})," (tidak memiliki data)."]}),"\n",(0,l.jsxs)(n.li,{children:["Ini dikarenakan Kotlin bisa mengakses Java, dan kebanyakan di Java, semua variable bisa ",(0,l.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Untuk membuat variable bisa bernilai ",(0,l.jsx)(n.code,{children:"null"}),", di Kotlin bisa menggunakan ",(0,l.jsx)(n.code,{children:"?"})," (tanda tanya) setelah tipe datanya."]}),"\n",(0,l.jsx)(n.li,{children:"Penggunaan  fitur ini tidak direkomendasikan untuk dilakukan di kotlin, hanya sebagai jalan akhir jika misal mengakses kode Java."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-kotlin",children:'// membuat variable string yang dapat diisi nilai null\r\nvar theFirstName: String? = "Ucup"\r\ntheFirstName = null\r\n\r\n// Error karena variable theFirstName bisa null\r\n// println(theFirstName.length)\r\n\r\n// Cara yang benar\r\nprintln(theFirstName?.length)\n'})}),"\n",(0,l.jsx)(n.h2,{id:"variable-constant",children:"Variable Constant"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Constant adalah Immutable data, yang biasanya diakses untuk keperluan global."}),"\n",(0,l.jsx)(n.li,{children:"Global artinya bisa diakses dimanapun."}),"\n",(0,l.jsxs)(n.li,{children:["Untuk menandai bahwa variable tersebut adalah constant, biasanya menggunakan ",(0,l.jsx)(n.code,{children:"UPPER_CASE"})," dalam pembuatan nama variable constant nya."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-kotlin",children:'// variable constant\r\nconst val APP_NAME = "Belajar Kotlin"\r\nconst val VERSION = "1.0"\r\n\r\nfun main() {\r\n    \r\n    println("$APP_NAME $VERSION")\r\n}\n'})})]})}function c(a={}){const{wrapper:n}={...(0,t.R)(),...a.components};return n?(0,l.jsx)(n,{...a,children:(0,l.jsx)(u,{...a})}):u(a)}},28453:(a,n,e)=>{e.d(n,{R:()=>r,x:()=>s});var i=e(96540);const l={},t=i.createContext(l);function r(a){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof a?a(n):{...n,...a}}),[n,a])}function s(a){let n;return n=a.disableParentContext?"function"==typeof a.components?a.components(l):a.components||l:r(a.components),i.createElement(t.Provider,{value:n},a.children)}}}]);