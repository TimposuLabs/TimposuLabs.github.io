"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[8236],{32747:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>u,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"java-unit-test/parameter-test","title":"Parameter Test","description":"Sebelumnya kita sudah tau jika ingin menambahkan parameter di function unit test, maka kita perlu membuat ParameterResolver. Namun jika terlalu banyak membuat ParameterResolver juga agak menyulitkan kita. JUnit memiliki fitur yang bernama @ParameterizedTest, dimana jenis unit test ini memang khusus dibuat agar dapat menerima parameter","source":"@site/tutorial/java/java-unit-test/18-parameter-test.md","sourceDirName":"java-unit-test","slug":"/java-unit-test/parameter-test","permalink":"/java/java-unit-test/parameter-test","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":18,"frontMatter":{"sidebar_position":18,"title":"Parameter Test"},"sidebar":"tutorialSidebar","previous":{"title":"Looping Test","permalink":"/java/java-unit-test/looping-test"},"next":{"title":"Timeout Test","permalink":"/java/java-unit-test/timeout-test"}}');var n=t(74848),i=t(28453);const s={sidebar_position:18,title:"Parameter Test"},u=void 0,d={},l=[{value:"Sumber Parameter",id:"sumber-parameter",level:2},{value:"Parameter dari Method lain menggunakan <code>@MethodSource</code>",id:"parameter-dari-method-lain-menggunakan-methodsource",level:3}];function o(e){const a={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.p,{children:["Sebelumnya kita sudah tau jika ingin menambahkan parameter di function unit test, maka kita perlu membuat ",(0,n.jsx)(a.code,{children:"ParameterResolver"}),". Namun jika terlalu banyak membuat ",(0,n.jsx)(a.code,{children:"ParameterResolver"})," juga agak menyulitkan kita. JUnit memiliki fitur yang bernama ",(0,n.jsx)(a.code,{children:"@ParameterizedTest"}),", dimana jenis unit test ini memang khusus dibuat agar dapat menerima parameter\r\nYang perlu kita lakukan adalah dengan mengganti ",(0,n.jsx)(a.code,{children:"@Test"})," menjadi ",(0,n.jsx)(a.code,{children:"@ParameterizedTest"}),"."]}),"\n",(0,n.jsx)(a.h2,{id:"sumber-parameter",children:"Sumber Parameter"}),"\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"@ParameterizedTest"})," mendukung beberapa sumber parameter, yaitu:"]}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"@ValueSource"}),", untuk sumber ",(0,n.jsx)(a.code,{children:"Number"}),", ",(0,n.jsx)(a.code,{children:"Char"}),", ",(0,n.jsx)(a.code,{children:"Boolean"})," dan ",(0,n.jsx)(a.code,{children:"String"}),"."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"@EnumSource"}),", untuk sumber berupa ",(0,n.jsx)(a.code,{children:"enum"}),"."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"@MethodSource"}),", untuk sumber dari static method."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"@CsvSource"}),", untuk sumber beruba data CSV."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"@CsvFileSource"}),", untuk sumber beruba file CSV."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"@ArgumentSource"}),", untuk data dari class ",(0,n.jsx)(a.code,{children:"ArgumentProvider"}),"."]}),"\n"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:'// Parameter Test\r\n@DisplayName("Test Calculator Parameter Test")\r\n@ParameterizedTest(name = "{displayName} dengan parameter {0}")\r\n@ValueSource(ints = {2, 4, 6, 8})\r\nvoid withTestParameter(int value) {\r\n\tvar expect = value + value;\r\n\tvar result = calculator.add(value, value);\r\n\t\r\n\tAssertions.assertEquals(expect, result);\r\n}\n'})}),"\n",(0,n.jsxs)(a.h3,{id:"parameter-dari-method-lain-menggunakan-methodsource",children:["Parameter dari Method lain menggunakan ",(0,n.jsx)(a.code,{children:"@MethodSource"})]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:'// Parameter Test dengan source dari method lain\r\n\r\n// harus static\r\npublic static List<Integer> parameterSouce() {\r\n\treturn List.of(1, 3, 5, 7, 9);\r\n}\r\n\r\n@DisplayName("Test Calculator Parameter Test dengan Method Source")\r\n@ParameterizedTest(name = "{displayName} dengan parameter {0}")\r\n@MethodSource({"parameterSouce"})\r\nvoid withTestMethodSource(int value) {\r\n\tvar expect = value + value;\r\n\tvar result = calculator.add(value, value);\r\n\t\r\n\tAssertions.assertEquals(expect, result);\r\n}\n'})})]})}function m(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},28453:(e,a,t)=>{t.d(a,{R:()=>s,x:()=>u});var r=t(96540);const n={},i=r.createContext(n);function s(e){const a=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function u(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(i.Provider,{value:a},e.children)}}}]);