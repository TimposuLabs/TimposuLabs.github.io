"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[7132],{47546:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"java-lambda/lambda-collection","title":"Lambda pada Collection","description":"Saat fitur Lambda keluar di Java 8, ada banyak sekali default method yang ditambahkan ke Java Collection. Beberapa ada default method yang banyak memanfaatkan fitur Lambda. Di materi ini kita akan bahas beberapa method yang memanfaatkan Lambda.","source":"@site/tutorial/java/java-lambda/06-lambda-collection.md","sourceDirName":"java-lambda","slug":"/java-lambda/lambda-collection","permalink":"/java/java-lambda/lambda-collection","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"Lambda pada Collection"},"sidebar":"tutorialSidebar","previous":{"title":"Method Reference","permalink":"/java/java-lambda/method-reference"},"next":{"title":"Lambda Lazy Parameter","permalink":"/java/java-lambda/lambda-lazy-parameter"}}');var i=n(74848),t=n(28453);const o={sidebar_position:6,title:"Lambda pada Collection"},l=void 0,d={},c=[{value:"1\ufe0f\u20e3 <code>Iterable.forEach</code>",id:"1\ufe0f\u20e3-iterableforeach",level:2},{value:"2\ufe0f\u20e3 <code>Collection.removeIf</code>",id:"2\ufe0f\u20e3-collectionremoveif",level:2},{value:"3\ufe0f\u20e3 <code>Map.forEach</code>",id:"3\ufe0f\u20e3-mapforeach",level:2},{value:"Dan Masih Banyak Lagi",id:"dan-masih-banyak-lagi",level:2}];function s(a){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...a.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:"Saat fitur Lambda keluar di Java 8, ada banyak sekali default method yang ditambahkan ke Java Collection. Beberapa ada default method yang banyak memanfaatkan fitur Lambda. Di materi ini kita akan bahas beberapa method yang memanfaatkan Lambda."}),"\n",(0,i.jsxs)(e.h2,{id:"1\ufe0f\u20e3-iterableforeach",children:["1\ufe0f\u20e3 ",(0,i.jsx)(e.code,{children:"Iterable.forEach"})]}),"\n",(0,i.jsxs)(e.p,{children:["Di dalam interface ",(0,i.jsx)(e.code,{children:"Iterable"})," terdapat method ",(0,i.jsx)(e.code,{children:"forEach"})," yang memiliki parameter ",(0,i.jsx)(e.code,{children:"Consumer"}),", yang merupakan iterface function yang berasal dari package ",(0,i.jsx)(e.code,{children:"java.util.function"}),", yang artinya kita dapat menggunakan ekspresi lambda terhadap method tersebut untuk menerima data."]}),"\n",(0,i.jsx)(e.admonition,{type:"info",children:(0,i.jsxs)(e.p,{children:["\ud83d\udcd1 Baca: ",(0,i.jsx)(e.a,{href:"/java/java-lambda/functional-interface#consumer",children:"Functional Interface Consumer"})]})}),"\n",(0,i.jsxs)(e.p,{children:["Method ",(0,i.jsx)(e.code,{children:"forEach"})," pada interface ",(0,i.jsx)(e.code,{children:"Iterable"}),":"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"default void forEach(Consumer<? super T> action) {\r\n    Objects.requireNonNull(action);\r\n    for (T t : this) {\r\n        action.accept(t);\r\n    }\r\n}\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Contoh penggunaan Lambda pada Collection ",(0,i.jsx)(e.code,{children:"forEach"}),":"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'List<String> names = List.of("Ayu", "Novi", "Eby");\r\n\r\n// predicate menggunakan for loop\r\nfor (var name : names) {\r\n    System.out.println(name);\r\n}\r\n\r\n// predicate menggunakan anonymous class\r\nnames.forEach(new Consumer<String>() {\r\n    @Override\r\n    public void accept(String value) {\r\n        System.out.println(value);\r\n    }\r\n});\r\n\r\n// predicate menggunakan lambda\r\nnames.forEach(value -> System.out.println(value));\r\n\r\n// predicate menggunakan lambda method reference\r\nnames.forEach(System.out::println);\n'})}),"\n",(0,i.jsxs)(e.h2,{id:"2\ufe0f\u20e3-collectionremoveif",children:["2\ufe0f\u20e3 ",(0,i.jsx)(e.code,{children:"Collection.removeIf"})]}),"\n",(0,i.jsxs)(e.p,{children:["Untuk menghapus elemen menggunakan lambda expression pada collection bisa meggunakan method ",(0,i.jsx)(e.code,{children:"removeIf"})," yang ada pada class ",(0,i.jsx)(e.code,{children:"Collection"}),", yang memiliki parameter ",(0,i.jsx)(e.code,{children:"Predicate"}),", yang merupakan iterface function yang berasal dari package ",(0,i.jsx)(e.code,{children:"java.util.function"})," yang akan mengembalikan nilai boolean."]}),"\n",(0,i.jsx)(e.admonition,{type:"info",children:(0,i.jsxs)(e.p,{children:["\ud83d\udcd1 Baca: ",(0,i.jsx)(e.a,{href:"/java/java-lambda/functional-interface#predicate",children:"Functional Interface Predicate"})]})}),"\n",(0,i.jsxs)(e.p,{children:["Method ",(0,i.jsx)(e.code,{children:"removeIf"})," pada interface ",(0,i.jsx)(e.code,{children:"Collection"}),":"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"default boolean removeIf(Predicate<? super E> filter) {\r\n    Objects.requireNonNull(filter);\r\n    boolean removed = false;\r\n    final Iterator<E> each = iterator();\r\n    while (each.hasNext()) {\r\n        if (filter.test(each.next())) {\r\n            each.remove();\r\n            removed = true;\r\n        }\r\n    }\r\n    return removed;\r\n}\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Contoh penggunaan Lambda pada Collection ",(0,i.jsx)(e.code,{children:"removeIf"}),":"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'List<String> names = new ArrayList<>(List.of("Aprizal", "Aan", "Komang", "Abid", "Agy", "Sultan"));\r\n\r\n// removeif anonymous class\r\nnames.removeIf(new Predicate<String>() {\r\n    @Override\r\n    public boolean test(String value) {\r\n        return value.length() > 5;\r\n    }\r\n});\r\n\r\n// removeif menggunakan lambda\r\nnames.removeIf(value -> value.length() > 5);\n'})}),"\n",(0,i.jsxs)(e.admonition,{type:"warning",children:[(0,i.jsxs)(e.p,{children:["jika melakukan penghapusan data elemen, ketika dalam kondisi for loop\r\nakan mengakibatkan kesalahan. Karena dapat mempengaruhi kondisi struktur elemen dalam collection. Contoh for loop remove data, ketika menghapus n pada contoh di bawah, ",(0,i.jsx)(e.code,{children:"length() > 5"})," maka elemen sesudahnya akan dimajukan\r\nuntuk mengisi elemen yang sudah dihapus sehingga struktur elemen berubah, sehingga logic program tidak berjalan sebagaimana mestinya."]}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'List<String> names = new ArrayList<>(List.of("Aprizal", "Aan", "Komang", "Abid", "Agy", "Sultan"));\r\n\r\n// dapat menimbulkan Error: ConcurrentModificationException\r\nfor (var n : names) {\r\n   if (n.length() > 5) {\r\n        names.remove(n); \r\n   }\r\n}\n'})})]}),"\n",(0,i.jsxs)(e.h2,{id:"3\ufe0f\u20e3-mapforeach",children:["3\ufe0f\u20e3 ",(0,i.jsx)(e.code,{children:"Map.forEach"})]}),"\n",(0,i.jsxs)(e.p,{children:["Di dalam interface ",(0,i.jsx)(e.code,{children:"Map"})," juga terdapat method ",(0,i.jsx)(e.code,{children:"forEach"})," yang memiliki parameter ",(0,i.jsx)(e.code,{children:"BiConsumer"}),", yang merupakan iterface function yang berasal dari package ",(0,i.jsx)(e.code,{children:"java.util.function"}),", yang artinya kita dapat menggunakan ekspresi lambda terhadap method tersebut untuk menerima data dengan Key dan Value."]}),"\n",(0,i.jsxs)(e.p,{children:["Method ",(0,i.jsx)(e.code,{children:"forEach"})," pada interface ",(0,i.jsx)(e.code,{children:"Map"}),":"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"default void forEach(BiConsumer<? super K, ? super V> action) {\r\n    Objects.requireNonNull(action);\r\n    for (Map.Entry<K, V> entry : entrySet()) {\r\n        K k;\r\n        V v;\r\n        try {\r\n            k = entry.getKey();\r\n            v = entry.getValue();\r\n        } catch (IllegalStateException ise) {\r\n            // this usually means the entry is no longer in the map.\r\n            throw new ConcurrentModificationException(ise);\r\n        }\r\n        action.accept(k, v);\r\n    }\r\n}\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Contoh penggunaan Lambda pada Map ",(0,i.jsx)(e.code,{children:"forEach"}),":"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'Map<String, String> map = new LinkedHashMap<>();\r\nmap.put("id", "Indonesia");\r\nmap.put("my", "Malaysia");\r\nmap.put("th", "Thailand");\r\nmap.put("ph", "Philippine");\r\n\r\n// menggunakan for each loop\r\nfor (var m : map.entrySet()) {\r\n    System.out.println("Key: " + m.getKey() + ", Value: " + m.getValue());\r\n}\r\n\r\nSystem.out.println();\r\n\r\n// menggunakan forEach anonymous class\r\nmap.forEach(new BiConsumer<String, String>() {\r\n    @Override\r\n    public void accept(String key, String value) {\r\n        System.out.println("Key: " + key + ", Value: " + value);\r\n\r\n    }\r\n});\r\n\r\n// menggunakan lambda\r\nmap.forEach((key, value) -> System.out.println("Key: " + key + ", Value: " + value));\n'})}),"\n",(0,i.jsx)(e.h2,{id:"dan-masih-banyak-lagi",children:"Dan Masih Banyak Lagi"}),"\n",(0,i.jsx)(e.p,{children:"Sebenarnya masih banyak ekspresi lambda yang terdapat dalam Java Collection, untuk lebih lanjut bisa melihat dokumentasi dari Java Collection."})]})}function m(a={}){const{wrapper:e}={...(0,t.R)(),...a.components};return e?(0,i.jsx)(e,{...a,children:(0,i.jsx)(s,{...a})}):s(a)}},28453:(a,e,n)=>{n.d(e,{R:()=>o,x:()=>l});var r=n(96540);const i={},t=r.createContext(i);function o(a){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}function l(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(i):a.components||i:o(a.components),r.createElement(t.Provider,{value:e},a.children)}}}]);