"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[8287],{22780:(a,s,e)=>{e.r(s),e.d(s,{assets:()=>u,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"java-unit-test/assertions/assertions-equals","title":"Assertions Equals & NotEquals","description":"Pada contoh sebelumnya kita sudah membuat testing menggunakan Assertions Equals. Assertions Equals digunakan untuk testing membandingkan 2 value actual(data aktual yang ada) dan expected(ekspektasi) yang nilainya harus cocok, sedangkan Assertions Not Equals perbandingan datanya tidak boleh cocok.","source":"@site/tutorial/java/java-unit-test/03-assertions/01-assertions-equals.md","sourceDirName":"java-unit-test/03-assertions","slug":"/java-unit-test/assertions/assertions-equals","permalink":"/java/java-unit-test/assertions/assertions-equals","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Assertions Equals & NotEquals"},"sidebar":"tutorialSidebar","previous":{"title":"Assertions","permalink":"/java/java-unit-test/assertions/"},"next":{"title":"Assertions Null & NotNull","permalink":"/java/java-unit-test/assertions/assertions-null"}}');var t=e(74848),i=e(28453);const o={sidebar_position:1,title:"Assertions Equals & NotEquals"},r=void 0,u={},l=[];function d(a){const s={a:"a",code:"code",p:"p",pre:"pre",...(0,i.R)(),...a.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["Pada contoh sebelumnya kita sudah membuat testing menggunakan ",(0,t.jsx)(s.a,{href:"/java/java-unit-test/assertions",children:"Assertions Equals"}),". Assertions Equals digunakan untuk testing membandingkan 2 value actual(data aktual yang ada) dan expected(ekspektasi) yang nilainya harus cocok, sedangkan Assertions Not Equals perbandingan datanya tidak boleh cocok."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:"assertEquals(actual, expected);\r\nassertNotEquals(actual, expected);\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Contoh kita akan menguji sebuat method sederhana yang akan melakuan penjumlahan dan validasi string ",(0,t.jsx)(s.code,{children:"null"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:"public int add(int a, int b) {\r\n    return a + b;\r\n}\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Melakukan testing menggunakan ",(0,t.jsx)(s.code,{children:"assertEquals"})," dan ",(0,t.jsx)(s.code,{children:"assertNotEquals"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:'@Test\r\nvoid testEqualsAndNotEquals() {\r\n    DemoUtils demoUtils = new DemoUtils();\r\n\r\n    assertEquals(6, demoUtils.add(4, 2), "4 + 2 harus 6");\r\n    assertNotEquals(6, demoUtils.add(4, 4), "4 + 4 tidak boleh 6");\r\n}\n'})})]})}function c(a={}){const{wrapper:s}={...(0,i.R)(),...a.components};return s?(0,t.jsx)(s,{...a,children:(0,t.jsx)(d,{...a})}):d(a)}},28453:(a,s,e)=>{e.d(s,{R:()=>o,x:()=>r});var n=e(96540);const t={},i=n.createContext(t);function o(a){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof a?a(s):{...s,...a}}),[s,a])}function r(a){let s;return s=a.disableParentContext?"function"==typeof a.components?a.components(t):a.components||t:o(a.components),n.createElement(i.Provider,{value:s},a.children)}}}]);