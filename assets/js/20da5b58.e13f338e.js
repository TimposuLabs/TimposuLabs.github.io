"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[8830],{44443:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"java-stream/stream-operation","title":"Stream Operation","description":"Berbeda dengan Java Collection, di Java Stream hal yang sangat menarik adalah fitur Stream Operations nya. Stream Operations adalah kumpulan operasi-operasi yang bisa kita gunakan untuk memanipulasi Stream itu sendiri. Ada banyak sekali jenis-jenis Stream Operations yang nanti akan kita bahas satu persatu. Namun secara garis besar, Stream Operations tidak akan memodifikasi data aslinya, melainkan hasil dari Stream Operations adalah sebuah Stream baru.","source":"@site/tutorial/java/java-stream/04-stream-operation.md","sourceDirName":"java-stream","slug":"/java-stream/stream-operation","permalink":"/java/java-stream/stream-operation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Stream Operation"},"sidebar":"tutorialSidebar","previous":{"title":"Stream Builder","permalink":"/java/java-stream/stream-builder"},"next":{"title":"Stream Pipeline","permalink":"/java/java-stream/stream-pipeline"}}');var r=n(74848),t=n(28453);const s={sidebar_position:4,title:"Stream Operation"},d=void 0,l={},o=[{value:"1\ufe0f\u20e3 Java Stream Intermediate Operations",id:"1\ufe0f\u20e3-java-stream-intermediate-operations",level:2},{value:"Method Intermediate Operation yang sering digunakan",id:"method-intermediate-operation-yang-sering-digunakan",level:3},{value:"2\ufe0f\u20e3 Java Stream Terminal Operations",id:"2\ufe0f\u20e3-java-stream-terminal-operations",level:2},{value:"Method Terminal Operation yang sering digunakan",id:"method-terminal-operation-yang-sering-digunakan",level:3},{value:"Contoh",id:"contoh",level:3}];function c(e){const a={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.p,{children:"Berbeda dengan Java Collection, di Java Stream hal yang sangat menarik adalah fitur Stream Operations nya. Stream Operations adalah kumpulan operasi-operasi yang bisa kita gunakan untuk memanipulasi Stream itu sendiri. Ada banyak sekali jenis-jenis Stream Operations yang nanti akan kita bahas satu persatu. Namun secara garis besar, Stream Operations tidak akan memodifikasi data aslinya, melainkan hasil dari Stream Operations adalah sebuah Stream baru."}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"stream intermediate operation dan steam terminal operation",src:n(45615).A+"",width:"650",height:"393"})}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsxs)(a.em,{children:["source: ",(0,r.jsx)(a.a,{href:"https://logicmojo.com/java8-feature-questions",children:"https://logicmojo.com/java8-feature-questions"})]})}),"\n",(0,r.jsx)(a.p,{children:"Konsep Stream Pipeline adalah penghubung antar operasi/operation. Operasi pada Stream pipeline terbagi menjadi dua kategori:"}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"1. Intermediate Operations"}),"\r\n",(0,r.jsx)(a.strong,{children:"2. Terminal Operations"})]}),"\n",(0,r.jsx)(a.h2,{id:"1\ufe0f\u20e3-java-stream-intermediate-operations",children:"1\ufe0f\u20e3 Java Stream Intermediate Operations"}),"\n",(0,r.jsx)(a.p,{children:"Intermediate operations bersifat lazy operations yang berfungsi:"}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsx)(a.li,{children:"Mengubah atau memfilter elemen dalam aliran"}),"\n",(0,r.jsx)(a.li,{children:"Tidak dapat menghasilkan hasil akhir sampai Terminal Operation dipanggil"}),"\n",(0,r.jsx)(a.li,{children:"Dapat dirantai untuk membangun alur stream pipeline"}),"\n"]}),"\n",(0,r.jsx)(a.h3,{id:"method-intermediate-operation-yang-sering-digunakan",children:"Method Intermediate Operation yang sering digunakan"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"filter()"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"map()"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"flatMap()"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"distinct()"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"sorted()"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"peek()"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"limit()"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"skip()"})}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"takeWhile()"})," (Java 9+)"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"dropWhile()"})," (Java 9+)"]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"2\ufe0f\u20e3-java-stream-terminal-operations",children:"2\ufe0f\u20e3 Java Stream Terminal Operations"}),"\n",(0,r.jsxs)(a.p,{children:["Terminal Operations adalah ",(0,r.jsx)(a.strong,{children:"final step"})," dalam stream pipeline, yang bersifat:"]}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:["Menghasilkan ",(0,r.jsx)(a.strong,{children:"result"})," (collection, number, boolean, dll.)"]}),"\n",(0,r.jsxs)(a.li,{children:["Akan melakukan ",(0,r.jsx)(a.strong,{children:"Trigger"})," stream execution"]}),"\n",(0,r.jsxs)(a.li,{children:["Akan melakukan ",(0,r.jsx)(a.strong,{children:"Consume"})," terhadap stream (stream tidak dapat digunakan kembali)"]}),"\n"]}),"\n",(0,r.jsx)(a.h3,{id:"method-terminal-operation-yang-sering-digunakan",children:"Method Terminal Operation yang sering digunakan"}),"\n",(0,r.jsxs)(a.table,{children:[(0,r.jsx)(a.thead,{children:(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.th,{children:"Operations"}),(0,r.jsx)(a.th,{children:"Description"}),(0,r.jsx)(a.th,{children:"Return Type"})]})}),(0,r.jsxs)(a.tbody,{children:[(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"forEach()"})}),(0,r.jsx)(a.td,{children:"Menerapkan tindakan pada setiap item"}),(0,r.jsx)(a.td,{children:"void"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"toArray()"})}),(0,r.jsx)(a.td,{children:"Konversi elemen stream ke array"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"T[]"})})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"collect()"})}),(0,r.jsx)(a.td,{children:"Menerapkan elemen ke Collection/map/string"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"R(varies)"})})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"reduce()"})}),(0,r.jsx)(a.td,{children:"Melakukan reduksi pada elemen menggunakan operator biner"}),(0,r.jsxs)(a.td,{children:[(0,r.jsx)(a.code,{children:"Optional<T>"})," or ",(0,r.jsx)(a.code,{children:"<T>"})]})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"min()"})}),(0,r.jsx)(a.td,{children:"Nilai minimum dari comparator"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"Optional<T>"})})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"max()"})}),(0,r.jsx)(a.td,{children:"Nilai maximal dari comparator"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"Optional<T>"})})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"count()"})}),(0,r.jsx)(a.td,{children:"Jumlah element"}),(0,r.jsx)(a.td,{children:"long"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"anyMatch()"})}),(0,r.jsx)(a.td,{children:"Mengembalikan true jika ada elemen cocok dengan predicate yang diberikan"}),(0,r.jsx)(a.td,{children:"boolean"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"allMatch()"})}),(0,r.jsx)(a.td,{children:"Mengembalikan true jika semua elemen cocok dengan predicate yang diberikan"}),(0,r.jsx)(a.td,{children:"boolean"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"noneMatch()"})}),(0,r.jsx)(a.td,{children:"Mengembalikan true jika tidak ada elemen cocok dengan predicate yang diberikan"}),(0,r.jsx)(a.td,{children:"boolean"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"findFirst()"})}),(0,r.jsx)(a.td,{children:"Mengembalikan elemen pertama (jika ada)"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"Optional<T>"})})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"findAny()"})}),(0,r.jsx)(a.td,{children:"Mengembalikan elemen apapun"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"Optional<T>"})})]})]})]}),"\n",(0,r.jsx)(a.h3,{id:"contoh",children:"Contoh"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'List<String> burung = List.of("Merpati", "Perkutut", "Pipit");\r\n\r\nStream<String> streamBurung = burung.stream();\r\nStream<String> burungUpper = streamBurung.map(String::toUpperCase); // Intermediate Operation\r\n\r\nburung.forEach(System.out::println); // Terminal Operation\r\nburungUpper.forEach(System.out::println); // Terminal Operation\n'})}),"\n",(0,r.jsx)(a.p,{children:"Output:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{children:"Merpati\r\nPerkutut\r\nPipit\r\nMERPATI\r\nPERKUTUT\r\nPIPIT\n"})})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},45615:(e,a,n)=>{n.d(a,{A:()=>i});const i=n.p+"assets/images/stream-operations-c4389d9fff313b3220d711fa65c7b483.png"},28453:(e,a,n)=>{n.d(a,{R:()=>s,x:()=>d});var i=n(96540);const r={},t=i.createContext(r);function s(e){const a=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(t.Provider,{value:a},e.children)}}}]);