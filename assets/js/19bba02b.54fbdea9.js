"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[6262],{11846:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>s,metadata:()=>n,toc:()=>u});var n=e(44306),r=e(74848),o=e(28453);const s={slug:"spring-boot-crud-rest-dto-mapstruct",title:"Spring Boot CRUD REST API Java Record DTO + Mapper dengan Mapstruct",authors:"topekox",tags:["springboot","spring","rest","api","database"]},i=void 0,p={authorsImageUrls:[void 0]},u=[];function l(t){const a={a:"a",p:"p",...(0,o.R)(),...t.components};return(0,r.jsxs)(a.p,{children:["Pada tutorial ini, kita akan membuat aplikasi Spring Boot CRUD (Create, Read, Update, Delete) seperti pada ",(0,r.jsx)(a.a,{href:"/blog/spring-boot-crud-rest-mysql-java-record-dto",children:"tutorial sebelumnya"}),". Jika pada tutorial sebelumnya kita melakukan mapping untuk konversi DTO ke Entity atau sebaliknya masih menggunakan cara manual, tutorial kita menggunakan generator mapper ",(0,r.jsx)(a.a,{href:"https://mapstruct.org/",children:"Mapstruct"}),"."]})}function g(t={}){const{wrapper:a}={...(0,o.R)(),...t.components};return a?(0,r.jsx)(a,{...t,children:(0,r.jsx)(l,{...t})}):l(t)}},28453:(t,a,e)=>{e.d(a,{R:()=>s,x:()=>i});var n=e(96540);const r={},o=n.createContext(r);function s(t){const a=n.useContext(o);return n.useMemo((function(){return"function"==typeof t?t(a):{...a,...t}}),[a,t])}function i(t){let a;return a=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:s(t.components),n.createElement(o.Provider,{value:a},t.children)}},44306:t=>{t.exports=JSON.parse('{"permalink":"/blog/spring-boot-crud-rest-dto-mapstruct","source":"@site/blog/2025-03-23-spring-boot-crud-rest-dto-mapper.md","title":"Spring Boot CRUD REST API Java Record DTO + Mapper dengan Mapstruct","description":"Pada tutorial ini, kita akan membuat aplikasi Spring Boot CRUD (Create, Read, Update, Delete) seperti pada tutorial sebelumnya. Jika pada tutorial sebelumnya kita melakukan mapping untuk konversi DTO ke Entity atau sebaliknya masih menggunakan cara manual, tutorial kita menggunakan generator mapper Mapstruct.","date":"2025-03-23T00:00:00.000Z","tags":[{"inline":true,"label":"springboot","permalink":"/blog/tags/springboot"},{"inline":true,"label":"spring","permalink":"/blog/tags/spring"},{"inline":true,"label":"rest","permalink":"/blog/tags/rest"},{"inline":true,"label":"api","permalink":"/blog/tags/api"},{"inline":true,"label":"database","permalink":"/blog/tags/database"}],"readingTime":8.51,"hasTruncateMarker":true,"authors":[{"name":"Ucup TopekoX","title":"TimposuLabs creator","imageURL":"https://topekox.github.io/assets/images/avatar.jpeg","key":"topekox","page":null}],"frontMatter":{"slug":"spring-boot-crud-rest-dto-mapstruct","title":"Spring Boot CRUD REST API Java Record DTO + Mapper dengan Mapstruct","authors":"topekox","tags":["springboot","spring","rest","api","database"]},"unlisted":false,"prevItem":{"title":"Menjalankan PostgreSQL di Docker Container pada Windows Subsystem for Linux (WSL)","permalink":"/blog/postgres-docker-wsl"},"nextItem":{"title":"Step-by-Step Membangun Spring Boot CRUD REST API dengan MySQL dan Java Record DTO","permalink":"/blog/spring-boot-crud-rest-mysql-java-record-dto"}}')}}]);