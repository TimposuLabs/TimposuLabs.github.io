"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[7129],{20560:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"kotlin-dasar/typedata-number","title":"Type Data Number","description":"Type Data Number digunakan untuk mengolah data dalam bentuk angka. Type data Number dibagi menjadi dua yaitu:","source":"@site/tutorial/kotlin/kotlin-dasar/03.typedata-number.md","sourceDirName":"kotlin-dasar","slug":"/kotlin-dasar/typedata-number","permalink":"/kotlin/kotlin-dasar/typedata-number","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Type Data Number"},"sidebar":"tutorialSidebar","previous":{"title":"Program Pertama","permalink":"/kotlin/kotlin-dasar/program-pertama"},"next":{"title":"Type Data Char","permalink":"/kotlin/kotlin-dasar/char"}}');var t=a(74848),i=a(28453);const l={sidebar_position:3,title:"Type Data Number"},o=void 0,d={},s=[{value:"1. Integer",id:"1-integer",level:2},{value:"2. Floating Point",id:"2-floating-point",level:2},{value:"\u2705 Literals",id:"-literals",level:2},{value:"\u2705 Underscore",id:"-underscore",level:2},{value:"\u2705 Conversion",id:"-conversion",level:2}];function c(n){const e={admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:"Type Data Number digunakan untuk mengolah data dalam bentuk angka. Type data Number dibagi menjadi dua yaitu:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Integer"}),"\n",(0,t.jsx)(e.li,{children:"Floating Point"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"1-integer",children:"1. Integer"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-kotlin",children:"fun main() {\r\n    // Type data Integer\r\n    var age: Byte = 30 //type data byte\r\n    var height: Int = 175 //type data int\r\n    var distance: Short = 2000 //type data short\r\n    var balance: Long = 1000000L //type data long\r\n\r\n    println(age);\r\n    println(height);\r\n    println(distance);\r\n    println(balance);\r\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"2-floating-point",children:"2. Floating Point"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-kotlin",children:"fun main() {\r\n    // Type data Float Floating\r\n    var temperature: Float = 30.50F //type data float\r\n    var amount: Double = 3045560.30 //type data double\r\n\r\n    println(temperature);\r\n    println(amount);\r\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"-literals",children:"\u2705 Literals"}),"\n",(0,t.jsxs)(e.p,{children:["Literal digunakan untuk merepresentasikab nilai tertentu dari suatu tipe data dalam bentuk teks. Contoh ",(0,t.jsx)(e.code,{children:"0x"})," untuk hexadesimal dan ",(0,t.jsx)(e.code,{children:"0b"})," untuk binary."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-kotlin",children:"fun main() {\r\n    var decimalLiteral: Int = 100\r\n    var hexadecimalLiteral: Int = 0xFF\r\n    var binaryLiteral: Int = 0b001\r\n\r\n    println(decimalLiteral)\r\n    println(hexadecimalLiteral)\r\n    println(binaryLiteral)\r\n}\n"})}),"\n",(0,t.jsx)(e.p,{children:"Output"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"100\r\n255\r\n1\n"})}),"\n",(0,t.jsx)(e.h2,{id:"-underscore",children:"\u2705 Underscore"}),"\n",(0,t.jsx)(e.p,{children:"Underscore digunakan sebagai penanda, tidak akan berpengaruh pada saat kompilasi."}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-kotlin",children:"fun main() {\r\n    // Underscore\r\n    var ages: Byte = 3_0\r\n    var heights: Int = 1_7_5\r\n    var distances: Short = 2_000\r\n    var balances: Long = 1_000_000L\r\n\r\n    println(ages);\r\n    println(heights);\r\n    println(distances);\r\n    println(balances);\r\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"-conversion",children:"\u2705 Conversion"}),"\n",(0,t.jsx)(e.p,{children:"Kita dapat melakukan konversi antar type data."}),"\n",(0,t.jsx)(e.admonition,{type:"warning",children:(0,t.jsxs)(e.p,{children:["Ketika melakukan conversi type data perlu diperhatikan range dari daya tampung masing-masing type data. Melakukan konversi dari type data dengan range yang kecil ke range yang beasar tidak menjadi masalah (contoh dari ",(0,t.jsx)(e.code,{children:"Byte"})," ke ",(0,t.jsx)(e.code,{children:"Int"}),"), berbeda jika dari range besar ke yang lebih kecil (contoh ",(0,t.jsx)(e.code,{children:"Double"})," ke ",(0,t.jsx)(e.code,{children:"Int"}),"), pastikan untuk memperhatikan daya tampung dari masing-masing type data."]})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-kotlin",children:"// Conversion\r\nvar number: Int = 300\r\n\r\nvar byte: Byte = number.toByte()\r\nvar short: Short = number.toShort()\r\nvar int: Int = number.toInt()\r\nvar long: Long = number.toLong()\r\nvar float: Float = number.toFloat()\r\nvar double: Double = number.toDouble()\n"})})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},28453:(n,e,a)=>{a.d(e,{R:()=>l,x:()=>o});var r=a(96540);const t={},i=r.createContext(t);function l(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);